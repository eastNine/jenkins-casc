jenkins:
  numExecutors: 1
  securityRealm:
    local:
      allowsSignup: false
      users:
        # create a user called admin
        - id: "admin"
          password: "admin"
  #authorizationStrategy: loggedInUsersCanDoAnything
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Job/Build:dev"
        - "Job/Cancel:dev"
        - "Job/Read:dev"
        - "Job/Workspace:dev"
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
        - "Run/Replay:dev"
        - "Run/Update:dev"
# jobs:
#   - file: /usr/local/seedjob.groovy
jobs:
  - script: >
      folder('testjobs')
  - script: >
      pipelineJob('testjobs/default-agent') {
        definition {
          cps {
            script("""\
              pipeline {
                agent any
                stages {
                  stage ('test') {
                    steps {
                      echo "hello"
                    }
                  }
                }
              }""".stripIndent())
          }
        }
      }
  - script: >
      pipelineJob('job1') {
        environmentVariables {
          envs(FOO: 'bar', TEST: '123')
        }
        definition {
          cpsScm {
            scm {
              github('eastNine/jenkins-casc')
            }
            scriptPath('job1.groovy')
          }
        }
      }
  - script: >
      pipelineJob('job1-not-sandbox') {
        environmentVariables {
          envs(FOO: 'foobar', TEST: '123456')
        }
        definition {
          cps {
            File file = new File('/usr/local/job1.groovy')
            String filebody = file.getText('UTF-8')
            script(filebody)
          }
        }
      }
  - file: /usr/local/job2.groovy
  - script: >
      pipelineJob('job2-onconfig-casc') {
        definition {
          environmentVariables {
            envs(WORLD: 'WORLD')
          }
          cps {
            File file = new File('/usr/local/template1.groovy')
            String filebody = file.getText('UTF-8')
            script(filebody)
            sandbox()
          }
        }
      }