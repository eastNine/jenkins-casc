unclassified:
  location:
    url: http://jenkins-casc.default.svc.cluster.local/

jenkins:
  clouds:
    - kubernetes:
        name: "kubernetes"
        #serverUrl: "https://infrajenkins-dns-52bf430b.hcp.koreacentral.azmk8s.io:443"
        #serverCertificate: "serverCertificate"
        #skipTlsVerify: true
        #credentialsId: "advanced-k8s-credentials"
        namespace: "default"
        jenkinsUrl: "http://jenkins-casc.default.svc.cluster.local/"
        #jenkinsTunnel: "jenkinsTunnel"
        containerCapStr: 100
        maxRequestsPerHostStr: 64
        retentionTimeout: 5
        connectTimeout: 10
        readTimeout: 20
        templates:
          - name: "k8s-agent"
            namespace: "default"
            label: "k8s-agent"
            nodeUsageMode: EXCLUSIVE
            volumes:
              - name: maven-home
                persistentVolumeClaim:
                  claimName: jenkins-maven-disk
            containers:
              - name: "azure-cli"
                image: "mcr.microsoft.com/azure-cli"
                alwaysPullImage: true
                ttyEnabled: true
                command: "cat"
              - name: "packer"
                image: "hashicorp/packer"
                alwaysPullImage: true
                ttyEnabled: true
                command: "cat"
              - name: "jq"
                image: "stedolan/jq"
                alwaysPullImage: true
                ttyEnabled: true
                command: "cat"
              - name: "maven"
                image: "maven:3.3.9-jdk-8-alpine"
                alwaysPullImage: true
                ttyEnabled: true
                volumeMounts:
                  - mountPath: "/root/.m2"
                    name: maven-home
                command: "cat"
  numExecutors: 1
  securityRealm:
    local:
      allowsSignup: false
      users:
        # create a user called admin
        - id: "admin"
          password: "admin"
  #authorizationStrategy: loggedInUsersCanDoAnything
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Job/Build:dev"
        - "Job/Cancel:dev"
        - "Job/Read:dev"
        - "Job/Workspace:dev"
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
        - "Run/Replay:dev"
        - "Run/Update:dev"
jobs:
  - file: /usr/local/seedjob.groovy
  - script: >
      folder('testjobs')
  - script: >
      pipelineJob('testjobs/default-agent') {
        definition {
          cps {
            script("""\
              pipeline {
                agent any
                stages {
                  stage ('test') {
                    steps {
                      echo "hello"
                    }
                  }
                }
              }""".stripIndent())
          }
        }
      }
  - script: >
      pipelineJob('job1') {
        environmentVariables {
          envs(FOO: 'bar', TEST: '123')
        }
        definition {
          cpsScm {
            scm {
              github('eastNine/jenkins-casc')
            }
            scriptPath('job1.groovy')
          }
        }
      }
  - script: >
      pipelineJob('job1-not-sandbox') {
        environmentVariables {
          envs(FOO: 'foobar', TEST: '123456')
        }
        definition {
          cps {
            File file = new File('/usr/local/job1.groovy')
            String filebody = file.getText('UTF-8')
            script(filebody)
          }
        }
      }
  - file: /usr/local/job2.groovy
  - script: >
      pipelineJob('job2-onconfig-casc') {
        definition {
          environmentVariables {
            envs(WORLD: 'WORLD')
          }
          cps {
            File file = new File('/usr/local/template1.groovy')
            String filebody = file.getText('UTF-8')
            script(filebody)
            sandbox()
          }
        }
      }