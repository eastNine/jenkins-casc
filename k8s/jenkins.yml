apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-casc
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: jenkins-casc
  template:
    metadata:
      labels:
        app: jenkins-casc
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      serviceAccountName: default
      securityContext:
        fsGroup: 1000
      volumes:
        - name: jenkinshome
          persistentVolumeClaim:
            claimName: azure-managed-disk
      containers:
      - name: jenkins-casc
        image: infraregistry.azurecr.io/jenkins-casc:develop
        resources:
          requests:
            cpu: 512m
            memory: 512Mi
          limits:
            cpu: 1024m
            memory: 1024Mi
        volumeMounts:
          - mountPath: "/var/jenkins_home/"
            name: jenkinshome
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: azure-managed-disk
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: default
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-casc
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: agent
      port: 50000
      protocol: TCP
  selector:
    app: jenkins-casc
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: fabric8-rbac
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name: default
    # Reference to upper's `metadata.namespace`
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io